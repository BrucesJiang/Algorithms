package fundamentals.basicProgModel;

/**************************************************
 *  % java Ex_1_1_32 10 1.0 10.0
 *   Data:
 *        7.775523 1.855402 8.642909 7.839980 6.942473 8.785438 2.792492 7.412817 4.101027 0.848931
 *        2.947068 5.722986 0.382738 0.099404 1.938657 8.985456 7.146204 9.592450 4.505279 8.510599
 *        3.572890 0.607080 1.556753 3.432534 7.080214 7.912700 6.032950 7.329809 6.809794 0.314672
 *        6.222727 7.558300 5.185047 6.025915 0.429342 2.961922 6.331167 6.288888 8.948238 9.034946
 *        3.011844 6.111813 5.465648 9.580402 5.660918 7.984904 0.191560 0.442278 8.073459 3.006851
 *        1.308162 3.984923 4.369648 3.978738 9.644961 2.651235 0.956095 6.712052 3.884337 6.151962
 *        5.383123 9.049360 0.056397 9.621616 1.232820 1.910726 9.599552 9.422218 4.471534 3.055846
 *        4.843312 9.184286 2.061776 2.191384 9.412404 1.145191 8.052356 5.554889 3.756362 6.878201
 *        5.851887 9.171174 2.776327 7.101232 7.939616 2.603973 3.350890 2.412555 5.878893 9.215128
 *        4.455361 5.521361 4.172387 4.695541 1.523943 0.824356 1.234509 2.946563 9.721875 9.025183
 *
 *        100个
 *
 *************************************************/

<<<<<<< HEAD
import util.api.*;
=======
import util.api.StdDraw;
import util.api.StdIn;
>>>>>>> parent of 26aaff0... Practice Question

/**
 * @auther Bruce Jiang
 * 在IDEA中测试没有办法完成
 */
public class Ex_1_1_32 {
    /**
     * 画直方图
     */
    public static void drawHistogram(double[] c, int N, double l, double r){

        int[] count = new int[N];
        for(int i = 0; i < c.length; i ++){
            int rank = getInterval(c[i], N, l, r);
            if(rank > -1){
                count[rank] ++;
            }
        }

        int maxCounts = StdStats.max(count);
        StdDraw.setCanvasSize();
<<<<<<< HEAD
        StdDraw.setXscale(l-10,r+10);
        StdDraw.setYscale(0, maxCounts + 10);

        double w = (r - l)/ N;
=======
        StdDraw.setScale();
        StdDraw.setPenRadius(.015);
>>>>>>> parent of 26aaff0... Practice Question

        for(int i = 0; i < count.length; i ++){
            double x = l + (i + 0.5)*w;
            double y = count[i] /2.0;
            double rw = 0.5 * w;
            double rh = count[i]/2.0;
            StdDraw.filledRectangle(x, y, rw, rh);
            //7.775523 1.855402 8.642909 7.839980 6.942473 8.785438 2.792492 7.412817 4.101027 0.848931 2.947068 5.722986 0.382738 0.099404 1.938657 8.985456 7.146204 9.592450 4.505279 8.510599 3.572890 0.607080 1.556753 3.432534 7.080214 7.912700 6.032950 7.329809 6.809794 0.314672 6.222727 7.558300 5.185047 6.025915 0.429342 2.961922 6.331167 6.288888 8.948238 9.034946 3.011844 6.111813 5.465648 9.580402 5.660918 7.984904 0.191560 0.442278 8.073459 3.006851 1.308162 3.984923 4.369648 3.978738 9.644961 2.651235 0.956095 6.712052 3.884337 6.151962 5.383123 9.049360 0.056397 9.621616 1.232820 1.910726 9.599552 9.422218 4.471534 3.055846 4.843312 9.184286 2.061776 2.191384 9.412404 1.145191 8.052356 5.554889 3.756362 6.878201 5.851887 9.171174 2.776327 7.101232 7.939616 2.603973 3.350890 2.412555 5.878893 9.215128 4.455361 5.521361 4.172387 4.695541 1.523943 0.824356 1.234509 2.946563 9.721875 9.025183
        }
    }

    /**
     * 获取间隔
     * @return 返回值 v 落在第几个格子中
     */
    public static int getInterval(double v, int N, double l, double r){
        if(v < l || v > r) return -1; //如果v不在范围内
        return (int)(v * (r - l)/N);
    }
    public static void main(String[] args){
        int N = Integer.parseInt(args[0]);
        double l = Double.parseDouble(args[1]);
        double r = Double.parseDouble(args[2]);


        double[] c = StdIn.readAllDoubles();
<<<<<<< HEAD
        StdOut.print(c);
=======

>>>>>>> parent of 26aaff0... Practice Question
        drawHistogram(c, N, l, r);
    }
}